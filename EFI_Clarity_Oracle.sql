-- SELECT * FROM UTMED_CLARITY0.ALERT@SOURCE.MI WHERE ROWNUM <= 20;

-- Earliest encounter month end for each patient
--/
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE TMP_PAT_DATE00';
   EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF;
END;
/

CREATE TABLE TMP_PAT_DATE00 AS (
        SELECT PAT_ID,MIN(LAST_DAY(CONTACT_DATE)) FIRST_CONTACT 
        FROM UTMED_CLARITY0.PAT_ENC@SOURCE.MI
        WHERE SUBSTR(PAT_ID,-1) = '3'
        GROUP BY PAT_ID
);
-- 8.382	0.0	76789

-- Each calendar month for each patient between their earliest encounter and now
--/
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE TMP_PAT_DATE01';
   EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF;
END;
/

CREATE TABLE TMP_PAT_DATE01 AS 
WITH q0 AS (
        SELECT DATE'2000-01-01' + level - 1 DT
        FROM DUAL CONNECT BY level <= ( SYSDATE - DATE'2000-01-01' + 1))
SELECT DT CALENDAR_DT,PAT_ID FROM q0 
INNER JOIN TMP_PAT_DATE00 pd ON q0.DT BETWEEN pd.FIRST_CONTACT AND SYSDATE
AND EXTRACT(DAY FROM DT) = 1
;
-- 3.746	0.0	5717400
-- 34.671, 57295345

-- Diagnoses that have a date range
--/
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE TMP_PAT_DIAG01';
   EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF;
END;
/
CREATE TABLE TMP_PAT_DIAG01 AS (
SELECT PAT_ID,DX_ID,LAST_DAY(NOTED_DATE) NOTED_DATE,LAST_DAY(COALESCE(RESOLVED_DATE,SYSDATE)) RESOLVED 
FROM UTMED_CLARITY0.PROBLEM_LIST@SOURCE.MI
WHERE PROBLEM_STATUS_C <> 3 
UNION
SELECT PAT_ID,DX_ID,LAST_DAY(COALESCE(MED_HX_START_DT,CONTACT_DATE)) NOTED_DATE
,LAST_DAY(COALESCE(MED_HX_END_DT,CONTACT_DATE)) RESOLVED 
FROM UTMED_CLARITY0.MEDICAL_HX@SOURCE.MI WHERE MED_HX_SOURCE_C = 1 
);
--  45.87	0.0	13659080
--  14.720, 1,385,853
--  53.326, 13,659,080
-- 13891041, 01:55

-- select segment_name,sum(bytes)/1024/1024/1024 GB from user_segments where segment_type='TABLE' group by segment_name;

-- Date-range diagnoses broken out into individual months
--/
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE TMP_PAT_DIAG02';
   EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF;
END;
/
CREATE TABLE TMP_PAT_DIAG02 AS (
        SELECT pdx.PAT_ID,pdt.CALENDAR_DT Mon,pdx.DX_ID
        FROM TMP_PAT_DIAG01 pdx
        INNER JOIN TMP_PAT_DATE01 pdt
        ON pdt.PAT_ID = pdx.PAT_ID AND pdt.CALENDAR_DT BETWEEN pdx.NOTED_DATE AND pdx.RESOLVED
);
-- 12.04	0.0	102159010
-- 106018772, 03:44

-- All patient-diagnosis-dates
--/
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE TMP_PAT_DIAG03';
   EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF;
END;
/
CREATE TABLE TMP_PAT_DIAG03 AS 
WITH q0 AS (
        SELECT PAT_ID,LAST_DAY(Mon) Mon,DX_ID
        FROM TMP_PAT_DIAG02
        UNION
        SELECT PAT_ID,LAST_DAY(CONTACT_DATE) Mon,DX_ID 
        FROM UTMED_CLARITY0.PAT_ENC_DX@SOURCE.MI
        UNION
        SELECT PATIENT_ID PAT_ID,LAST_DAY(SERVICE_DATE) Mon,PRIMARY_DX_ID DX_ID FROM UTMED_CLARITY0.ARPB_TRANSACTIONS@SOURCE.MI WHERE PRIMARY_DX_ID IS NOT NULL
        UNION
        SELECT PATIENT_ID PAT_ID,LAST_DAY(SERVICE_DATE) Mon,DX_TWO_ID DX_ID FROM UTMED_CLARITY0.ARPB_TRANSACTIONS@SOURCE.MI WHERE DX_TWO_ID IS NOT NULL
        UNION
        SELECT PATIENT_ID PAT_ID,LAST_DAY(SERVICE_DATE) Mon,DX_THREE_ID DX_ID FROM UTMED_CLARITY0.ARPB_TRANSACTIONS@SOURCE.MI WHERE DX_THREE_ID IS NOT NULL
        UNION
        SELECT PATIENT_ID PAT_ID,LAST_DAY(SERVICE_DATE) Mon,DX_FOUR_ID DX_ID FROM UTMED_CLARITY0.ARPB_TRANSACTIONS@SOURCE.MI WHERE DX_FOUR_ID IS NOT NULL
        UNION
        SELECT PATIENT_ID PAT_ID,LAST_DAY(SERVICE_DATE) Mon,DX_FIVE_ID DX_ID FROM UTMED_CLARITY0.ARPB_TRANSACTIONS@SOURCE.MI WHERE DX_FIVE_ID IS NOT NULL
        UNION
        SELECT PATIENT_ID PAT_ID,LAST_DAY(SERVICE_DATE) Mon,DX_SIX_ID DX_ID FROM UTMED_CLARITY0.ARPB_TRANSACTIONS@SOURCE.MI WHERE DX_SIX_ID IS NOT NULL
)
SELECT * FROM q0 WHERE SUBSTR(PAT_ID,-1) = '3';
-- 212.66	0.0	14496304
-- 386.762	0.0	55584230
-- 45.718	0.0	23358285
-- 152236809, 18:04

-- Free up disk space, comment out if debugging
DROP TABLE TMP_PAT_DATE00 PURGE;
DROP TABLE TMP_PAT_DATE01 PURGE;
DROP TABLE TMP_PAT_DIAG01 PURGE;
DROP TABLE TMP_PAT_DIAG02 PURGE;


-- Abnormal labs
--/
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE TMP_PAT_LAB00';
   EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF;
END;
/
-- MISSING: UTMED_CLARITY0.LNC_DB_MAIN@SOURCE.MI
CREATE TABLE TMP_PAT_LAB00 AS
SELECT DISTINCT enc.PAT_ID,LAST_DAY(enc.CONTACT_DATE) Mon,lnc.LNC_CODE --,RESULT_FLAG_C,ord.PAT_ENC_CSN_ID,COMPONENT_ID,COMPON_LNC_ID 
FROM UTMED_CLARITY0.ORDER_RESULTS@SOURCE.MI ord
INNER JOIN UTMED_CLARITY0.PAT_ENC@SOURCE.MI enc ON ord.PAT_ENC_CSN_ID = enc.PAT_ENC_CSN_ID
INNER JOIN UTMED_CLARITY0.LNC_DB_MAIN@SOURCE.MI lnc ON ord.COMPON_LNC_ID = lnc.RECORD_ID
WHERE RESULT_FLAG_C <> 1 
-- 371536, 00:13
-- 417114, 00:12

-- All other deficits
--/
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE EFI_Pat_Other';
   EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF;
END;
/
CREATE TABLE EFI_Pat_Other AS 
WITH q0 AS (
        -- bp
        SELECT PAT_ID,LAST_DAY(CONTACT_DATE) Mon, 14 GRP
        FROM UTMED_CLARITY0.PAT_ENC@SOURCE.MI
        WHERE BP_SYSTOLIC > 180 OR BP_DIASTOLIC > 100
        UNION
        -- overweight
        SELECT PAT_ID,LAST_DAY(CONTACT_DATE) Mon, 34 GRP
        FROM UTMED_CLARITY0.PAT_ENC@SOURCE.MI
        WHERE BMI > 30
        UNION
        -- underweight
        SELECT PAT_ID,LAST_DAY(CONTACT_DATE) Mon, 35 GRP
        FROM UTMED_CLARITY0.PAT_ENC@SOURCE.MI
        WHERE BMI < 18.5
        UNION
        -- tobacco
        SELECT PAT_ID,LAST_DAY(CONTACT_DATE) Mon, 48 GRP
        FROM UTMED_CLARITY0.SOCIAL_HX@SOURCE.MI
        WHERE TOBACCO_USER_C = 1
        UNION
        -- ADL: MISSING
        /*
        SELECT PAT_ID,LAST_DAY(CONTACT_DATE) Mon, 50 GRP
        FROM UTMED_CLARITY0.SOCIAL_ADL_HX@SOURCE.MI
        WHERE HX_ADL_QUESTION_ID IN (
                 '1041000' --SOCIAL ADL:FEEDING
                ,'1041001' --SOCIAL ADL:BATHING
                ,'1041003' --SOCIAL ADL:DRESSING
                ,'1041005' --SOCIAL ADL:AMBULATION
                ,'1041007' --SOCIAL ADL:TOILETING
        ) AND HX_ADL_RESPONSE_C = 1
        UNION
        */
        -- Instrumental ADL: MISSING
        /*
        SELECT PAT_ID,LAST_DAY(CONTACT_DATE) Mon, 51 GRP
        FROM UTMED_CLARITY0.SOCIAL_ADL_HX@SOURCE.MI
        WHERE HX_ADL_QUESTION_ID IN (
                 1041008	--SOCIAL ADL:FINANCES
                ,1041009 -- SOCIAL ADL:MANAGING MEDICATIONS
                ,1041010 -- SOCIAL ADL:DRIVING
                ,1041011 -- SOCIAL ADL:SHOPPING
                ,1041012 -- SOCIAL ADL:COOKING
                ,1041013 -- SOCIAL ADL:CLEANING
                ,1041014 -- SOCIAL ADL:TELEPHONE USE
        ) AND HX_ADL_RESPONSE_C = 1
        UNION
        */
        -- stress: MISSING
        /*
        SELECT PAT_ID,LAST_DAY(CONTACT_DATE) Mon, 54 GRP
        FROM UTMED_CLARITY0.SOCIAL_ADL_HX@SOURCE.MI
        WHERE HX_ADL_QUESTION_ID IN (
         100309 -- Q_SOC_STRESS
        ,19262 -- SOCIAL ADL: STRESS CONCERN
        ) AND HX_ADL_RESPONSE_C = 1
        UNION
        */
        -- pain
        /*
        SELECT PAT_ID,LAST_DAY(CONTACT_DATE) Mon,33 GRP 
        FROM UTMED_CLARITY0.PAT_ENC_2@SOURCE.MI
        WHERE PAT_PAIN_SCORE_C > 7
        UNION
        */
        -- polypharmacy
        SELECT PAT_ID,LAST_DAY(ORDERING_DATE) Mon, 49 GRP
        FROM UTMED_CLARITY0.ORDER_MED@SOURCE.MI
        GROUP BY PAT_ID,LAST_DAY(ORDERING_DATE)
        HAVING COUNT(DISTINCT MEDICATION_ID) >= 10
)
SELECT * FROM q0 WHERE SUBSTR(PAT_ID,-1) = '3';
-- 21.977	0.0	130946
-- 1513993, 1:03

-- Mapping Clarity DX_ID codes directly to Rockwood index deficit groups
--/
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE EFI_EDG';
   EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF;
END;
/
CREATE TABLE EFI_EDG AS
SELECT DX_ID,GRP 
FROM UTMED_CLARITY0.CLARITY_EDG@SOURCE.MI edg
INNER JOIN Streamlined_EFI_Codes efi
ON edg.REF_BILL_CODE LIKE efi.CODE || '%' 
AND edg.REF_BILL_CODE_SET_C = efi.ICDTYPE;
-- 23.322	0.0	85659

-- Everything needed for aggregating EFIs over various time periods
--/
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE EFI_PatDateGrp';
   EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF;
END;
/
CREATE TABLE EFI_PatDateGrp AS
WITH q0 AS (
        SELECT pd.PAT_ID,pd.Mon,edg.GRP 
        FROM TMP_Pat_Diag03 pd 
        INNER JOIN EFI_EDG edg ON pd.DX_ID = edg.DX_ID
        UNION
        /*
        SELECT PAT_ID,Mon,GRP
        FROM ##PAT_LAB00 pl
        INNER JOIN Streamlined_EFI_Labs efi 
        ON pl.LNC_CODE = efi.CODE
        UNION
        */
        SELECT PAT_ID,Mon,GRP
        FROM EFI_Pat_Other
) 
SELECT q0.*
        ,ADD_MONTHS(Mon,-6) Window6Mo 
        ,ADD_MONTHS(Mon,-12) Window12Mo 
        ,ADD_MONTHS(Mon,-24) Window24Mo 
FROM q0 
;
-- 7.602	0.0	3359280
-- 220.028	0.0	6056418
-- 24.182	0.0	11977009

-- 6 month EFIs
--/
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE TMP_EFI_6mo';
   EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF;
END;
/
CREATE TABLE TMP_EFI_6mo AS
SELECT q0.PAT_ID,q0.Mon
        ,COUNT(DISTINCT q1.Mon) Months6Mo
        ,COUNT(DISTINCT q1.GRP) Frail6Mo
FROM EFI_PatDateGrp q0 LEFT JOIN EFI_PatDateGrp q1 
ON q0.PAT_ID = q1.PAT_ID AND q1.Mon BETWEEN q0.Window6Mo AND q0.Mon
GROUP BY q0.PAT_ID,q0.Mon;
-- 99.086	0.0	1671762
-- 215.475	0.0	6056418

--/
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE TMP_EFI_12mo';
   EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF;
END;
/
CREATE TABLE TMP_EFI_12mo AS
SELECT q0.PAT_ID,q0.Mon
        ,COUNT(DISTINCT q1.Mon) Months12Mo
        ,COUNT(DISTINCT q1.GRP) Frail12Mo
FROM EFI_PatDateGrp q0 LEFT JOIN EFI_PatDateGrp q1 
ON q0.PAT_ID = q1.PAT_ID AND q1.Mon BETWEEN q0.Window12Mo AND q0.Mon
GROUP BY q0.PAT_ID,q0.Mon;
-- 153.466	0.0	1671762
-- 325.722	0.0	6056418

--/
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE TMP_EFI_24mo';
   EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF;
END;
/
CREATE TABLE TMP_EFI_24mo AS
SELECT q0.PAT_ID,q0.Mon
        ,COUNT(DISTINCT q1.Mon) Months24Mo
        ,COUNT(DISTINCT q1.GRP) Frail24Mo
FROM EFI_PatDateGrp q0 LEFT JOIN EFI_PatDateGrp q1 
ON q0.PAT_ID = q1.PAT_ID AND q1.Mon BETWEEN q0.Window24Mo AND q0.Mon
WHERE SUBSTR(q0.PAT_ID,-1) = '0'
GROUP BY q0.PAT_ID,q0.Mon;
-- 29.06	0.0	486017

SELECT * FROM TMP_EFI_24mo WHERE ROWNUM <= 100
SELECT * FROM EFI_PatDateGrp WHERE ROWNUM <= 100
SELECT * FROM TMP_Pat_Diag03 WHERE ROWNUM <= 100
--/
BEGIN
        FOR chunk_24mo IN 1..9
                LOOP
                        INSERT INTO TMP_EFI_24mo (PAT_ID,Mon,Months24Mo,Frail24Mo)
                        SELECT q0.PAT_ID,q0.Mon
                                ,COUNT(DISTINCT q1.Mon) Months24Mo
                                ,COUNT(DISTINCT q1.GRP) Frail24Mo
                        FROM EFI_PatDateGrp q0 LEFT JOIN EFI_PatDateGrp q1 
                        ON q0.PAT_ID = q1.PAT_ID 
                        AND q1.Mon BETWEEN q0.Window24Mo AND q0.Mon
                        WHERE SUBSTR(q0.PAT_ID,-1) = TO_CHAR(chunk_24mo)
                        GROUP BY q0.PAT_ID,q0.Mon;
                END LOOP;
END;
/
-- 

-- Final frailty results
--/
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE EFI_Frailty';
   EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF;
END;
/
SELECT efi24.PAT_ID,efi24.Mon,Months6mo,Frail6mo,Months12Mo,Frail12Mo,Months24Mo,Frail24Mo
INTO EFI_Frailty
FROM TMP_EFI_24mo efi24 
LEFT JOIN TMP_EFI_12mo efi12 
ON efi24.PAT_ID = efi12.PAT_ID AND efi24.Mon = efi12.Mon
LEFT JOIN TMP_EFI_6mo efi6 
ON efi24.PAT_ID = efi6.PAT_ID AND efi24.Mon = efi6.Mon
;
